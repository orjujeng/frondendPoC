{"ast":null,"code":"var _jsxFileName = \"/Users/orjujeng/vscodeProject/frontEndPoC/react/reactpoc/src/components/ClassComponents/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ClassComponents extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      flag: true,\n      'adv': false\n    };\n    this.input2 = /*#__PURE__*/React.createRef();\n    this.changeFlag = () => {\n      console.log(this);\n      const {\n        flag\n      } = this.state;\n      this.setState({\n        flag: !flag\n      });\n    };\n    this.showInput = event => {\n      console.log(this.input1.value);\n      console.log(this.input2.current.value);\n      event.target.innerHTMl = this.input2.current.value;\n      // bug\n    };\n    this.selfChange = () => {\n      console.log(this.selfChange1.innerHTML);\n    };\n    this.adv = flag => {\n      console.log(flag);\n      return flag => {\n        this.setState({\n          'adv': flag\n        });\n      };\n    };\n  }\n  render() {\n    const {\n      flag,\n      adv\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.changeFlag,\n        children: [\"This is ClassComponents state test \", flag ? 'true' : 'false', \" \", this.props.name, \" \", this.state.key]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: c => this.input1 = c\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: this.input2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.showInput,\n        children: \"click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.selfChange,\n        ref: c => {\n          this.selfChange1 = c;\n        },\n        children: \"self change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.adv(true),\n        children: [\"adv change \", adv ? 'true' : 'false']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this);\n  }\n  static getDerivedStateFromProps(props, state) {\n    const {\n      name\n    } = props;\n    return {\n      key: name\n    };\n  }\n  componentDidMount() {}\n}\nClassComponents.propTypes = {\n  name: PropTypes.string\n};","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","ClassComponents","Component","constructor","args","state","flag","input2","createRef","changeFlag","console","log","setState","showInput","event","input1","value","current","target","innerHTMl","selfChange","selfChange1","innerHTML","adv","render","children","onClick","props","name","key","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","c","getDerivedStateFromProps","componentDidMount","propTypes","string"],"sources":["/Users/orjujeng/vscodeProject/frontEndPoC/react/reactpoc/src/components/ClassComponents/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ClassComponents extends React.Component {\n    state = { flag: true, 'adv': false }\n    static propTypes = {\n        name: PropTypes.string\n    }\n    input2=React.createRef();\n    render() {\n        const { flag,adv } = this.state\n        return (<div>\n                 <span onClick={this.changeFlag}>This is ClassComponents state test {flag ? 'true' : 'false'} {this.props.name} {this.state.key}</span>\n                 <hr/>\n                 <input type='text' ref={c=>this.input1=c}></input>\n                 <input type='text' ref={this.input2}></input>\n                 <div onClick={this.showInput}>click me</div>\n                 <div onClick={this.selfChange} ref={(c)=>{this.selfChange1=c}}>self change</div>\n                 <div onClick={this.adv(true)} >adv change {adv ? 'true' : 'false'}</div>\n               </div>)\n    }\n\n    changeFlag = () => {\n        console.log(this)\n       \n        const { flag } = this.state\n        this.setState({ flag: !flag })\n    }\n\n    showInput=(event)=>{\n        console.log(this.input1.value)\n        console.log(this.input2.current.value)\n        event.target.innerHTMl = this.input2.current.value\n        // bug\n    }\n\n    selfChange=()=>{\n        console.log(this.selfChange1.innerHTML)\n    }\n\n    adv=(flag)=>{\n        console.log(flag)\n        return (flag)=>{this.setState({'adv':flag})}\n    }\n\n    static getDerivedStateFromProps(props,state) {\n        const {name}=props\n        return {\n            key:name\n        }\n    }\n\n    componentDidMount() {\n        \n    }\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}