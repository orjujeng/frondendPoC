{"ast":null,"code":"var _jsxFileName = \"/Users/orjujeng/vscodeProject/frontEndPoC/react/reactpoc/src/components/Header/index.js\";\nimport './index.css';\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.newItem = /*#__PURE__*/React.createRef();\n    this.addItem = () => {\n      const tirmResult = this.newItem.current.value.trim();\n      if (tirmResult === '') {\n        alert(\"please check the format of input\");\n      } else {\n        const filterArray = this.props.state.todos.filter(item => {\n          return item.name === tirmResult;\n        });\n        filterArray.length >= 1 ? alert(\"Have item in record please check\") : this.props.addState({});\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"please add the name of the items\",\n        ref: this.newItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addItem,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","nanoid","jsxDEV","_jsxDEV","Header","Component","constructor","args","newItem","createRef","addItem","tirmResult","current","value","trim","alert","filterArray","props","state","todos","filter","item","name","length","addState","render","children","type","placeholder","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/orjujeng/vscodeProject/frontEndPoC/react/reactpoc/src/components/Header/index.js"],"sourcesContent":["import './index.css';\nimport React from 'react'\nimport {nanoid} from 'nanoid'\nexport default class Header extends React.Component {\n    newItem = React.createRef();\n\n    addItem = () => {\n        const tirmResult = this.newItem.current.value.trim()\n        if (tirmResult === '') \n            { \n                alert(\"please check the format of input\") \n            } else {\n                const filterArray =this.props.state.todos.filter((item) => { return item.name === tirmResult })\n                filterArray.length>=1?alert(\"Have item in record please check\"):this.props.addState({})\n            }\n    }\n    render() {\n        return (\n            <div>\n                <input type='text' placeholder='please add the name of the items' ref={this.newItem} />\n                <button onClick={this.addItem}>Submit</button>\n            </div>\n        )\n    }\n}\n\n"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC7B,eAAe,MAAMC,MAAM,SAASJ,KAAK,CAACK,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAChDC,OAAO,gBAAGR,KAAK,CAACS,SAAS,CAAC,CAAC;IAAA,KAE3BC,OAAO,GAAG,MAAM;MACZ,MAAMC,UAAU,GAAG,IAAI,CAACH,OAAO,CAACI,OAAO,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;MACpD,IAAIH,UAAU,KAAK,EAAE,EACjB;QACII,KAAK,CAAC,kCAAkC,CAAC;MAC7C,CAAC,MAAM;QACH,MAAMC,WAAW,GAAE,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAK;UAAE,OAAOA,IAAI,CAACC,IAAI,KAAKX,UAAU;QAAC,CAAC,CAAC;QAC/FK,WAAW,CAACO,MAAM,IAAE,CAAC,GAACR,KAAK,CAAC,kCAAkC,CAAC,GAAC,IAAI,CAACE,KAAK,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC3F;IACR,CAAC;EAAA;EACDC,MAAMA,CAAA,EAAG;IACL,oBACItB,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,kCAAkC;QAACC,GAAG,EAAE,IAAI,CAACrB;MAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvF9B,OAAA;QAAQ+B,OAAO,EAAE,IAAI,CAACxB,OAAQ;QAAAgB,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}